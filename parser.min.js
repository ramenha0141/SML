function parser(e,t){const i=[[Object.keys(t)[0]]],o=[];for(e.push({type:"$"});i.length>0;)if("object"==typeof i[0]){const s=i.shift();if("string"==typeof e[0]){if(!t[s[0]][e[0]])throw`SyntaxError: Unexpected token '${e[0]}'.`;i.unshift(...t[s[0]][e[0]],void 0),o.push(s)}else{if(!t[s[0]][Symbol.for(e[0].type)])throw"$"===e[0].type?"SyntaxError: Unexpected end of file.":`SyntaxError: Unexpected token '${e[0].value}'.`;i.unshift(...t[s[0]][Symbol.for(e[0].type)],void 0),o.push(s)}}else if("string"==typeof i[0]){const t=i.shift();if("string"==typeof e[0]?e[0]!==t:e[0].value!==t)throw`SyntaxError: Unexpected token '${"string"==typeof e[0]?e[0]:e[0].value}', ${t} expected.`;o.push("string"==typeof e[0]?e.shift():e.shift().value)}else if(i[0]===Symbol.for("$"))i.shift();else if("symbol"==typeof i[0]){const t=i.shift();if(e[0].type!==Symbol.keyFor(t))throw`SyntaxError: Unexpected token '${"string"==typeof e[0]?e[0]:e[0].value}', ${Symbol.keyFor(t)} type expected.`;o.push(e.shift().value)}else void 0===i[0]&&(i.shift(),o.push([void 0]));const s={};function n(e){const t=e.child[0],i=function(e){const t=[];for(let i=0;i<e.child.length;i+=2)t.push(h(e.child[i]));return t}(e.child[2]);s[t]=i}function h(e){const t=[];for(let i=0;i<e.child.length;i++)switch(e.child[i].type){case"identifier":"@"===e.child[i].child[0].substr(0,1)?t.push(Symbol.for(e.child[i].child[0].slice(1))):t.push([e.child[i].child[0]]);break;case"string":t.push(e.child[i].child[0].slice(1,-1));break;case"epsilon":return"Îµ"}return t}return function(e){for(let t=0;t<e.child.length;t+=2)n(e.child[t])}(function e(t){const i={type:t,child:[]};for(;o.length>0;)if("string"==typeof o[0])i.child.push(o.shift());else if("string"==typeof o[0][0]){const t=e(o.shift()[0]);t.child.length>0&&("_"===t.type.slice(0,1)?i.child.push(...t.child):i.child.push(t))}else if(void 0===o[0][0])return o.shift(),i;return i}().child[0]),s}